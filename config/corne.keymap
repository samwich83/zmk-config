/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/*                 36 KEY MATRIX

  ╭────────────────────────┬────────────────────────╮
  │  0   1   2   3   4   5 │  6   7   8   9  10  11 │
  │ 12  13  14  15  16  17 │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28  29 │ 30  31  32  33  34  35 │
  ╰───────────╮ 36  37  38 │ 39  40  41 ╭───────────╯
              ╰────────────┴────────────╯              */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define KEYS_L   0  1  2  3  4  5 12 13 14 15 16 17 24 26 26 27 28 29
#define KEYS_R   6  7  8  9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS  36 37 38 39 40 41

#define BASE   0
#define LOWER  1
#define RAISE  2
#define ADJUST 3
#define GAMING 4

/ {
    behaviors {
        bkspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        capsWord: capsWord {
            compatible = "zmk,behavior-caps-word";
            label = "CAPSWORD";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            continue-list = <MINUS BACKSPACE>;
        };

        myht: my_hold_tap {     // rename for brevity
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
        };

        lt_bkspc: layer_tap_bkspc {   // rename for brevity
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            bindings = <&mo>, <&bkspc_del>;  // will still need to pass 2nd arg when envoking
        };

/*


    Noticeable delay when tapping HRMs: Increase require-prior-idle-ms. As a rule of thumb, you want to set it to at least
        10500/x where x is your (relaxed) WPM for English prose.4
    
    False negatives (same-hand): Reduce tapping-term-ms (or disable hold-trigger-key-positions)
    
    False negatives (cross-hand): Reduce require-prior-idle-ms (or set flavor to hold-preferred -- to continue using
        hold-trigger-on-release, you must also patch ZMK or use an already patched branch)
    
    False positives (same-hand): Increase tapping-term-ms
    
    False positives (cross-hand): Increase require-prior-idle-ms (or set flavor to tap-preferred, which requires holding
        HRMs past tapping term to activate)


*/



        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>,  <&kp>;

            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <75>;       // decrease if having cross hand false negatives

            //hold-trigger-key-positions = <KEYS_R THUMBS>;  // remove thumbs so alt tab works better?
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <250>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <75>;       // decrease if having cross hand false negatives

            //hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        capsLockCombo {
            bindings = <&kp CAPSLOCK>;
            key-positions = <28 31>;  // V + M
        };

        capsWordCombo {
            bindings = <&capsWord>;
            key-positions = <27 32>;  // C + ,
        };

        menuCombo {
            bindings = <&kp K_CONTEXT_MENU>;
            key-positions = <26 33>;  // X + .
        };

//        escCombo {
//            bindings = <&kp ESCAPE>;
//            key-positions = <3 4>;    // E + R
//            require-prior-idle-ms = <50>;  // increase if having false positives
//        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
     &kp ESCAPE    &kp Q         &kp W         &kp E         &kp R         &kp T           &kp Y         &kp U         &kp I         &kp O         &kp P         &bkspc_del
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp TAB       &hml LGUI A   &hml LALT S   &hml LCTRL D  &hml LSHFT F  &kp G           &kp H         &hmr RSHFT J  &hmr RCTRL K  &hmr RALT L  &hmr RGUI SEMI &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp LSHFT     &mt LCTRL Z   &kp X         &kp C         &kp V         &kp B           &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp RSHFT
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &kp LALT      &mo 1         &kp RET         &kp SPACE     &mo 2         &kp RET
//                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        lower {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
     &none         &kp PG_UP     &kp HOME      &kp UP        &kp END       &none           &none         &kp AMPS      &kp STAR      &kp LPAR      &kp RPAR      &kp BSPC
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none         &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &none           &none         &kp DOLLAR    &kp PERCENT   &kp CARET     &none         &kp BSLH
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp LSHFT     &kp BSPC      &none         &kp ESC       &kp SPC       &none           &none         &kp EXCL      &kp AT_SIGN  &kp HASH       &kp FSLH      &kp RSHFT
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &kp C_PREV    &trans        &kp C_PP        &kp C_PP      &mo 3         &kp C_NEXT
//                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        raise {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
     &kp GRAVE     &kp LT        &kp GT        &kp LBRC      &kp RBRC      &none           &none         &kp N7        &kp N8        &kp N9        &kp N0        &kp BSPC
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp TILDE     &kp MINUS     &kp UNDER     &kp LPAR      &kp RPAR      &none           &none         &kp N4        &kp N5        &kp N6        &none         &kp PIPE
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp LSHFT     &kp PLUS      &kp EQUAL     &kp LBKT      &kp RBKT      &none           &none         &kp N1        &kp N2        &kp N3        &kp FSLH      &kp RSHFT
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &kp LGUI      &mo 3         &kp N0          &kp C_PP      &trans        &kp C_NEXT
//                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        adjust {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
     &none         &kp F1        &kp F2        &kp F3        &kp F4        &none           &bt BT_SEL 0  &none         &kp RS(INS)   &none         &kp PSCRN     &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none         &kp F5        &kp F6        &kp F7        &kp F8        &none           &bt BT_SEL 1  &kp CAPSLOCK  &none         &none         &none         &none
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &none         &kp F9        &kp F10       &kp F11       &kp F12       &none           &none         &kp C_MENU    &none        &none          &none         &bt BT_CLR
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &trans        &trans        &trans          &trans        &trans        &tog GAMING
//                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        gaming {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ 
     &kp ESCAPE    &kp Q         &kp W         &kp E         &kp R         &kp T           &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSPC
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp TAB       &kp A         &kp S         &kp D         &kp F         &kp G           &kp H         &kp J         &kp K         &kp L         &kp SEMI      &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
     &kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B           &kp N         &kp M         &kp COMMA     &kp PERIOD    &kp SLASH     &kp RSHFT
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                               &kp LALT      &kp P        &kp ENTER       &kp SPACE      &mt C_NEXT C_PP  &trans
//                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        // add in a helldivers layer?
    };
};
